<%#
 Copyright 2013-2018 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
<ng-container [ngSwitch]="mode">
    <%- include('component-table-list-template', {toArrayString: toArrayString}); -%>
    <%- include('component-basic-list-template', {toArrayString: toArrayString}); -%>
    <%- include('component-card-list-template', {toArrayString: toArrayString}); -%>
    <%- include('component-search-app-list-template', {toArrayString: toArrayString}); -%>
    <%- include('component-search-article-list-template', {toArrayString: toArrayString}); -%>
    <%- include('component-search-project-list-template', {toArrayString: toArrayString}); -%>
    <%_ if (searchEngine === 'elasticsearch') { _%>
    <ng-template #searchForm>
        <nz-card [nzBordered]="false">
            <form nz-form >
                <%_ for (idx in fields) {
                    const fieldName = fields[idx].fieldName;
                    const fieldNameCapitalized = fields[idx].fieldNameCapitalized;
                    const fieldNameHumanized = fields[idx].fieldNameHumanized;
                    const fieldType = fields[idx].fieldType;
                    const fieldTypeBlobContent = fields[idx].fieldTypeBlobContent;
                    const fieldTitle = fields[idx].javadoc || fields[idx].fieldNameHumanized;
                    let fieldInputType = 'text';
                    let ngModelOption = '';
                    const translationKey = `${i18nKeyPrefix}.${fieldName}`;
                    if (['Integer', 'Long', 'Float', 'Double', 'BigDecimal'].includes(fieldType)) {
                        fieldInputType = 'number';
                    } else if (fieldType === 'LocalDate') {
                        fieldInputType = 'date';
                    } else if (['Instant', 'ZonedDateTime'].includes(fieldType)) {
                        fieldInputType = 'datetime-local';
                    } else if (fieldType === 'Boolean') {
                        fieldInputType = 'checkbox';
                    } else if (['byte[]', 'ByteBuffer'].includes(fieldType) && fieldTypeBlobContent !== 'text') {
                        fieldInputType = 'hidden';
                    }
                    _%>
                <standard-form-row [title]="''" style="padding-bottom: 11px;">
                    <nz-form-item>
                        <nz-form-label nzFor="<%= fieldName %>"><%= fieldTitle %></nz-form-label>
                        <nz-form-control>
                            <%_ if (fields[idx].fieldType === 'String') { _%>
                            <input nz-input name="<%= fieldName %>" placeholder="" type="text" [(ngModel)]="filters.<%= fieldName %>" (change)="searchDebounce.next()" />
                            <%_ } else if (['byte[]', 'ByteBuffer'].includes(fieldType) && fieldTypeBlobContent === 'text') { _%>
                            <textarea nz-input name="<%= fieldName %>" placeholder="" nzAutosize [(ngModel)]="filters.<%= fieldName %>" (change)="searchDebounce.next()" ></textarea>
                            <%_ } else if (['Integer', 'Long'].includes(fieldType)) { _%>
                            <nz-input-number name="<%= fieldName %>" [nzStep]="1" [(ngModel)]="filters.<%= fieldName %>" (ngModelChange)="searchDebounce.next()" ></nz-input-number>
                            <%_ } else if (['Float', 'Double'].includes(fieldType)) { _%>
                            <nz-input-number name="<%= fieldName %>" [nzStep]="0.1" [(ngModel)]="filters.<%= fieldName %>" (ngModelChange)="searchDebounce.next()" ></nz-input-number>
                            <%_ } else if (fieldType === 'BigDecimal') { _%>
                            <nz-input-number name="<%= fieldName %>" [nzStep]="0.01" [(ngModel)]="filters.<%= fieldName %>" (ngModelChange)="searchDebounce.next()" ></nz-input-number>
                            <%_ } else if (fieldType === 'LocalDate') { _%>
                            <nz-date-picker name="<%= fieldName %>" [(ngModel)]="filters.<%= fieldName %>" (ngModelChange)="searchDebounce.next()" ></nz-date-picker>
                            <%_ } else if (['Instant', 'ZonedDateTime'].includes(fieldType)) { _%>
                            <nz-date-picker nzShowTime name="<%= fieldName %>" placeholder="" [(ngModel)]="filters.<%= fieldName %>" (ngModelChange)="searchDebounce.next()" ></nz-date-picker>
                            <%_ } else if (fieldType === 'Boolean') { _%>
                            <nz-select name="<%= fieldName %>" nzMode="multiple" placeholder="" nzAllowClear [(ngModel)]="filters.<%= fieldName %>" (ngModelChange)="searchDebounce.next()" >
                                <nz-option [nzLabel]="'是'" [nzValue]="true"></nz-option>
                                <nz-option [nzLabel]="'否'" [nzValue]="false"></nz-option>
                            </nz-select>
                            <%_ } else if (['byte[]', 'ByteBuffer'].includes(fieldType) && fieldTypeBlobContent !== 'text') { _%>
                            <input nz-input name="<%= fieldName %>" type="hidden" [(ngModel)]="filters.<%= fieldName %>" (change)="searchDebounce.next()" />
                            <%_ } else if (fields[idx].fieldIsEnum) { _%>
                            <nz-select name="<%= fieldName %>" placeholder="" nzAllowClear [(ngModel)]="filters.<%= fieldName %>" (ngModelChange)="searchDebounce.next()" >
                                <nz-option *ngFor="let value of <%= fieldName %>Text.filter;"
                                        [nzLabel]="value.text"
                                        [nzValue]="value.value">
                                </nz-option>
                            </nz-select>
                            <%_ } _%>
                        </nz-form-control>
                    </nz-form-item>
                </standard-form-row>
                <%_ } _%>
            </form>
        </nz-card>
    </ng-template>
    <%_ } _%>
</ng-container>

